name: build

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  version:
    name: Calculate Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Calculate version
        id: version
        run: curl -Ls https://solugo.github.io/gitversion/run.sh | GITVERSION=v1.1.1 bash
  build:
    name: Build ${{ needs.version.outputs.version }}
    runs-on: ubuntu-latest
    needs:
      - version
    env:
      VERSION: ${{ needs.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Docker Image
        run: |
          ./gradlew check jib \
            -Pversion=${{ needs.version.outputs.version }} \
            --image ghcr.io/${{ github.repository }} \
          ;
  deploy-titan:
    name: Deploy ${{ needs.version.outputs.version }} on Titan
    runs-on: ubuntu-latest
    needs:
      - version
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure Kubernetes
        run: install -m 700 -D <(echo '${{ secrets.KUBE_CONFIG_TITAN_01 }}') ~/.kube/config
      - name: Deploy to Kubernetes
        run: |
          helm upgrade -i http-trap ./chart \
            --set image.tag=${{ needs.version.outputs.version }} \
            --set image.pullPolicy=Always \
            --set ingress.enabled=true \
            --set ingress.domain=trap.solugo.de \
            --set ingress.annotations."kubernetes\.io/ingress\.class"=public \
            --set ingress.annotations."cert-manager\.io/cluster-issuer"=letsencrypt \
          ;
